version: '3.8'

services:
  # LocalStack - AWS services emulation
  localstack:
    image: localstack/localstack:latest
    container_name: batch-voice-localstack
    ports:
      - "4566:4566"  # LocalStack main port
      - "4571:4571"  # Legacy port (optional)
    environment:
      - SERVICES=dynamodb,s3,sqs
      - DEBUG=1
      - DATA_DIR=/tmp/localstack/data
      - PORT_WEB_UI=4566
      - DOCKER_HOST=unix:///var/run/docker.sock
      - AWS_DEFAULT_REGION=ap-northeast-1
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
    volumes:
      - "./localstack-data:/tmp/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - batch-voice-network


  # Backend API
  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: batch-voice-api
    ports:
      - "8000:8000"
    environment:
      - AWS_ENDPOINT_URL=http://localstack:4566
      - AWS_DEFAULT_REGION=ap-northeast-1
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
    depends_on:
      - localstack
    volumes:
      - ./backend:/app
    networks:
      - batch-voice-network
    profiles:
      - full

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: batch-voice-frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - api
    networks:
      - batch-voice-network
    profiles:
      - full

  # Worker for batch processing
  worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: batch-voice-worker
    environment:
      - AWS_ENDPOINT_URL=http://localstack:4566
      - AWS_DEFAULT_REGION=ap-northeast-1
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
    depends_on:
      - localstack
    volumes:
      - ./backend:/app
    networks:
      - batch-voice-network
    profiles:
      - full
    command: python worker.py

networks:
  batch-voice-network:
    driver: bridge